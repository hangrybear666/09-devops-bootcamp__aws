#!/user/bin/env groovy

library identifier: '09-devops-bootcamp__aws@main', retriever: modernSCM(
    scm: [$class: 'GitSCMSource', 
    credentialsId: 'git-creds', 
    remote: 'https://github.com/hangrybear666/09-devops-bootcamp__aws.git', 
    traits: [gitBranchDiscovery()]], 
    libraryPath: 'jenkins-shared-library/')
def groovyScript

pipeline {
    agent any
    environment {
        DEPLOYABLE_NAME='java-app'
        EC2_USER='ec2-user'
    }
    tools {
        maven 'Maven'
    }
    parameters {
        text(name: 'DOCKER_HUB_REPO_URL', defaultValue: 'hangrybear/devops_bootcamp', description: 'Enter your own docker hub repository')
        text(name: 'EC2_PUBLIC_IP', defaultValue: '3.79.237.46', description: 'Enter your own docker hub repository')
    }
    stages {
        stage('init') {
            steps {
                dir("java-app") {
                    script {
                        groovyScript = load "script.groovy"
                    }
                }
            }
        }
        stage('increment version') {
            steps {
                dir("java-app") {
                    script {
                        // using jenkins shared library groovy scripts in /jenkins-shared-library/vars
                        incrementMavenVersion()
                    }
                }
            }
        }
        stage('build app') {
            steps {
                dir("java-app") {
                    script {
                        // using jenkins shared library groovy scripts in /jenkins-shared-library/vars
                        buildJar()
                    }
                }
            }
        }
        stage('build image') {
            steps {
                dir("java-app") {
                    script {
                        withCredentials([usernamePassword(credentialsId: 'docker-hub-repo', passwordVariable: 'PASS', usernameVariable: 'USER')]){
                            // using jenkins shared library groovy scripts extended themselves by a groovy Docker class in /jenkins-shared-library
                            buildImage(env.DEPLOYABLE_NAME)
                            dockerLogin()
                            dockerPush(env.DEPLOYABLE_NAME)
                        }
                    }
                }
            }
        }
        stage("deploy") {
            steps {
                script {
                    echo 'deploying docker image to EC2...'
                    def dockerCmd = "docker run -p 3080:3080 -d ${DOCKER_HUB_REPO_URL}:${DEPLOYABLE_NAME}-${VERSION_NUM}"
                    sshagent(['ec2-server-key']) {
                        sh "ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_PUBLIC_IP} ${dockerCmd}"
                    }
                }
            }               
        }
        stage('commit version update'){
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'git-creds', passwordVariable: 'PASS', usernameVariable: 'USER')]){
                        sh 'git config --global user.email "jenkins@example.com"'
                        sh 'git config --global user.name "jenkins"'

                        sh 'git status'
                        sh 'git branch'
                        sh 'git config --list'

                        sh "git remote set-url origin https://${USER}:${PASS}@github.com/hangrybear666/09-devops-bootcamp__aws.git"
                        sh 'git add .'
                        sh "git commit -m 'Updated Version to ${VERSION}'"
                        sh 'git push origin HEAD:main'
                    }
                }
            }
        }
    }
}

